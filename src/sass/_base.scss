//   PRIMARY COLORS
$theme-1-primary-color: #525a4c;
$theme-1-primary-color-darker: #464c41;
$theme-1-primary-color-lighter: #6d7865;

$theme-2-primary-color: #5f7577;
$theme-2-primary-color-darker: #56696b;
$theme-2-primary-color-lighter: #759090;

$theme-3-primary-color: #906455;
$theme-3-primary-color-darker: #7b5448;
$theme-3-primary-color-lighter: #C18675;

$contrast-color: #ffffff;

//  OTHER COLORS
$colors: (
        "theme-1": (
                img-placeholder: $theme-1-primary-color-lighter,
                overlay: $theme-1-primary-color,
                body-bg: $theme-1-primary-color,
                footer-bg: $theme-1-primary-color-darker,
                header-bg: $theme-1-primary-color,
                active-item-bg: $theme-1-primary-color-lighter,
                card-bg: $theme-1-primary-color-lighter,
                lightbox-bg: $theme-1-primary-color-darker,
                hover-btn-bg: $theme-1-primary-color-lighter
        ),
        "theme-2": (
                img-placeholder: $theme-2-primary-color-lighter,
                overlay: $theme-2-primary-color,
                body-bg: $theme-2-primary-color,
                footer-bg: $theme-2-primary-color-darker,
                header-bg: $theme-2-primary-color,
                active-item-bg: $theme-2-primary-color-lighter,
                card-bg: $theme-2-primary-color-lighter,
                lightbox-bg: $theme-2-primary-color-darker,
                hover-btn-bg: $theme-2-primary-color-lighter
        ),
        "theme-3": (
                img-placeholder: $theme-3-primary-color-lighter,
                overlay: $theme-3-primary-color,
                body-bg: $theme-3-primary-color,
                footer-bg: $theme-3-primary-color-darker,
                header-bg: $theme-3-primary-color,
                active-item-bg: $theme-3-primary-color-lighter,
                card-bg: $theme-3-primary-color-lighter,
                lightbox-bg: $theme-3-primary-color-darker,
                hover-btn-bg: $theme-3-primary-color-lighter
        )
);
//  COLOR MODIFIERS
$opacity: 0.5;
$hex-opacity: 7d;

$lightbox-hex-opacity: cc;

//  TYPOGRAPHY
/* Hero section header are dealt differently. They are not scalable like rest of the fonts (rem - unit),
instead they use “px” or “vw” units. This decision was made based on Hero header traits => font needs to
span almost across the view width of entire header section. Their sizes are highly dependent on their usage thus,
you cannot find them here as a variable. Instead, their sizes are already written in code where they are being used.*/
$font-color: $contrast-color;
$font-stack: 'Crimson Text', serif;
$font-base-size: 1.2;
$font-base-size-mobile: 1;
$font-base-unit: rem;
$line-height: 1.5em;
$line-height-headers: 1.2em;
$link-opacity: $opacity;
$paragraph-margin: 1em 0;

@mixin create-font-sizes($font-base-size, $font-base-unit) {
  * {
    font-size: $font-base-size + $font-base-unit;
  }

  h1 { // this  is usually not used because H1 header is in hero section
    font-size: $font-base-size * 2.2 + $font-base-unit;
  }

  h2 {
    font-size: $font-base-size * 2 + $font-base-unit;
  }

  h3 {
    font-size: $font-base-size * 1.8 + $font-base-unit;
  }

  h4 {
    font-size: $font-base-size * 1.6 + $font-base-unit;
  }

  h5 {
    font-size: $font-base-size * 1.4 + $font-base-unit;
  }

  h6 {
    font-size: $font-base-size * 1.2 + $font-base-unit;
  }
}

//  BORDERS
$border-radius-sm: 8px;
$border-radius-md: 20px;
$border-color: $contrast-color;
$border-opacity: $opacity;

//  SIZES AND SPACES
$desktop-body-width: 1580px;
$desktop-body-max-width: 0.8;

@mixin max-body-size {
  max-width: 90%;
  margin-left: auto;
  margin-right: auto;

  @media all and (min-width: $min-width-breakpoint-lg) {
    max-width: $desktop-body-max-width * 100%;
  }

  @media all and (min-width: $min-width-breakpoint-xl) {
    width: $desktop-body-width;
  }
}

//  BREAKPOINTS
$min-width-breakpoint-xxl: $desktop-body-width / $desktop-body-max-width; // 1975px
$min-width-breakpoint-xl: $desktop-body-width;
$min-width-breakpoint-lg: 1200px;
$min-width-breakpoint-md: 800px;
$min-width-breakpoint-sm: 600px;
$min-width-breakpoint-xs: 400px;

$max-width-breakpoint-xxl: $min-width-breakpoint-xxl - 0.02px;
$max-width-breakpoint-xl: $min-width-breakpoint-xl - 0.02px;
$max-width-breakpoint-lg: $min-width-breakpoint-lg - 0.02px;
$max-width-breakpoint-md: $min-width-breakpoint-md - 0.02px;
$max-width-breakpoint-sm: $min-width-breakpoint-sm - 0.02px;
$max-width-breakpoint-xs: $min-width-breakpoint-xs - 0.02px;

//  MIXINS AND FUNCTIONS
@mixin reset-ul {
  margin: 0;
  padding: 0;

  li {
    list-style: none;
  }
}

@mixin reset-a {
  text-decoration: none;
  &:hover {
    opacity: 1;
  }
}

@mixin reset-btn {
  padding: 0;
  background-color: unset;
  border: unset;
}

@mixin reset-header {
  font-weight: 400;
  margin: 0;
  padding: 0;
}

@mixin set-subtitle-with-header($header) {
  #{$header} {
    line-height: 1em;
  }

  .subtitle {
    margin-bottom: 1em;
    margin-top: 0.6em;
  }
}

@mixin border-opacity($color, $opacity) { //TODO merge opacity mixins into one mixin
  border-color: rgba($color, $opacity);
}

@mixin background-opacity($color, $opacity) {
  background-color: rgba($color, $opacity);
}

// Ellipsis for multiline subtitle works only in Webkit browser and also in Firefox
@mixin ellipsis-for-multiline-text($max-line-count) {
  display: -webkit-box;
  overflow : hidden;
  text-overflow: ellipsis;
  -webkit-line-clamp: $max-line-count;
  -webkit-box-orient: vertical;
}

@mixin set-theme-colors($css-property, $color-key, $rest-values...) {
  @each $theme, $sub-map in $colors {
    #root > .#{$theme} & {
      #{$css-property}: map-get($sub-map, $color-key)#{$rest-values};
    }
  }
}

/**
 * Returns the value (one of the "primary colors" variable) in a map $colors with the given key.
 *
 * @example
 * get-color-from-colors(theme-1, body-bg) => $theme-1-primary-color
 */
@function get-color-from-colors($keys...) {
  $map: $colors;
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}

//  MIXINS AND FUNCTIONS - COMPONENTS
@mixin set-image-set($img-name, $base-size, $coefficient1, $coefficient2) {
  $base-size-2x: $base-size * $coefficient2;
  $base-size-1x: $base-size * $coefficient1;
  background-image: url("../../dist/img/#{$img-name}-#{$base-size}.webp");
  background-image: -webkit-image-set(
                  url("../../dist/img/#{$img-name}-#{$base-size}.webp") 1x,
                  url("../../dist/img/#{$img-name}-#{$base-size-1x}.webp") #{$coefficient1}x,
                  url("../../dist/img/#{$img-name}-#{$base-size-2x}.webp") #{$coefficient2}x
  );
  background-image: image-set(
                  url("../../dist/img/#{$img-name}-#{$base-size}.webp") 1x,
                  url("../../dist/img/#{$img-name}-#{$base-size-1x}.webp") #{$coefficient1}x,
                  url("../../dist/img/#{$img-name}-#{$base-size-2x}.webp") #{$coefficient2}x
  );
}

@mixin set-img-for-category-card($n,$img-name) {
  &:nth-child(#{$n}) a {
    @include set-image-set($img-name, 370, 1.5, 2);
  }
}

@mixin set-image-set-for-hero($img-name) {
  @include set-image-set(#{$img-name}-mobile, 400, 1.5, 2);

  @media all and (min-width: $min-width-breakpoint-xs) {
    @include set-image-set(#{$img-name}-mobile, 400, 1.5, 2);
  }

  @media all and (min-width: $min-width-breakpoint-sm) {
    @include set-image-set(#{$img-name}-mobile, 800, 1.5, 2);
  }

  @media all and (min-width: $min-width-breakpoint-md) {
    @include set-image-set(#{$img-name}-mobile, 1200, 1.5, 2);
  }

  @media all and (min-width: $min-width-breakpoint-lg) {
    @include set-image-set($img-name, 1440, 1.5, 2);
  }

  @media all and (min-width: $min-width-breakpoint-xl) {
    @include set-image-set($img-name, 1920, 1.5, 1.5);
  }

  @media all and (min-width: $min-width-breakpoint-xxl) {
    @include set-image-set($img-name, 2160, 1, 1);
  }
}

@mixin set-grid-for-cards{
  display: grid;
  grid-gap: 3vw;
  justify-content: space-between;
  grid-template-columns: 1fr;
  grid-auto-rows: 1fr;

  @media all and (min-width: $min-width-breakpoint-xs) {
    grid-template-columns: 1fr 1fr;
  }

  @media all and (min-width: $min-width-breakpoint-md) {
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 2vw;
  }

  @media all and (min-width: $min-width-breakpoint-xl) {
    grid-template-columns: 1fr 1fr 1fr 1fr;
  }

  @media all and (min-width: $min-width-breakpoint-xxl) {
    grid-gap: 32px;
  }
}

@mixin padding-and-border-for-buttons {
  padding: 0.2em 1em;
  border:1px solid;
  border-radius: $border-radius-sm;
  @include border-opacity($border-color, $border-opacity);

  @media all and (min-width: $min-width-breakpoint-sm) {
    padding: 0.4em 1.7em;
  }
}

@mixin spacers-between-button-like-items($item, $mobile-justify-content) {
  @media all and (max-width: $max-width-breakpoint-sm) {
    display: flex;
    justify-content: $mobile-justify-content;
  }

  #{$item} {
    @media all and (min-width: $min-width-breakpoint-sm) {
      margin-left: 0.7em;
      margin-right: 0.7em;
    }

    &:first-of-type {
      margin-left: 0;
    }

    &:last-of-type {
      margin-right: 0;
    }
  }
}
